<%= form_with(model: booking, local: true) do |form| %>
  <% if booking.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(booking.errors.count, "error") %> prohibited this booking from being saved:</h2>

      <ul>
      <% booking.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <!-- Do not allow the user to select the user -->
  <!-- We should already know who the user is, from the sessions helper -->
  <%= form.hidden_field :user_id, :value => current_user.id %>

  <!-- Do not allow the user to select the tour -->
  <!-- We should already know what tour we are booking -->
  <%= form.hidden_field :tour_id, :value => @tour.id %>

  <!-- Allow the user to attempt to book seats whether or not there are enough seats -->
  <div class="field">
    <%= form.label "# Seats to Book" %>
    <%= form.number_field :num_seats %>
  </div>

  <!-- TODO add a form drop-down to pick among several options -->
  <!-- TODO show these options if an attempted booking was rejected due to not enough seats -->
  <!-- TODO "book available, waitlist remainder" / "waitlist all seats" -->
  <!-- TODO the default value should be blank to force a choice AND to support the initial submission where this drop-down is not shown -->

  <!-- Submit the form to create a new booking -->
  <div class="actions">
    <%= form.submit %>
  </div>

<% end %>
